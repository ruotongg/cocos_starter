{"version":3,"sources":["assets\\scripts\\Star.js"],"names":["cc","Class","Component","properties","pickRadius","getPlayerDistance","PlayerPos","game","player","getPosition","dist","node","position","sub","mag","onPicked","spawnNewStar","gainScore","destroy","start","update","dt","opacityRatio","timer","starDuration","minOpacity","opacity","Math","floor"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEAA,EAAE,CAACC,KAAH,CAAS;AACL,aAASD,EAAE,CAACE,SADP;AAGLC,EAAAA,UAAU,EAAE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,IAAAA,UAAU,EAAE;AAhBJ,GAHP;AAsBL;AAEA;AAEAC,EAAAA,iBAAiB,EAAC,6BAAU;AACxB;AACA,QAAIC,SAAS,GAAC,KAAKC,IAAL,CAAUC,MAAV,CAAiBC,WAAjB,EAAd,CAFwB,CAGxB;;AACA,QAAIC,IAAI,GAAC,KAAKC,IAAL,CAAUC,QAAV,CAAmBC,GAAnB,CAAuBP,SAAvB,EAAkCQ,GAAlC,EAAT;AACA,WAAOJ,IAAP;AACH,GAhCI;AAkCLK,EAAAA,QAAQ,EAAC,oBAAU;AACf;AACA,SAAKR,IAAL,CAAUS,YAAV,GAFe,CAIf;;AACA,SAAKT,IAAL,CAAUU,SAAV,GALe,CAOf;;AACA,SAAKN,IAAL,CAAUO,OAAV;AACH,GA3CI;AA6CLC,EAAAA,KA7CK,mBA6CI,CAER,CA/CI;AAiDLC,EAAAA,MAjDK,kBAiDGC,EAjDH,EAiDO;AACR;AACA,QAAG,KAAKhB,iBAAL,KAAyB,KAAKD,UAAjC,EAA4C;AACxC;AACA,WAAKW,QAAL;AACA;AACH,KANO,CAQR;;;AACA,QAAIO,YAAY,GAAC,IAAE,KAAKf,IAAL,CAAUgB,KAAV,GAAgB,KAAKhB,IAAL,CAAUiB,YAA7C;AACA,QAAIC,UAAU,GAAC,EAAf;AACA,SAAKd,IAAL,CAAUe,OAAV,GAAkBD,UAAU,GAACE,IAAI,CAACC,KAAL,CAAWN,YAAY,IAAI,MAAMG,UAAV,CAAvB,CAA7B;AACH;AA7DI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - https://docs.cocos.com/creator/manual/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        pickRadius: 0,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    getPlayerDistance:function(){\r\n        //根据Player节点位置判断距离\r\n        var PlayerPos=this.game.player.getPosition();\r\n        //根据两点位置计算两点之间距离\r\n        var dist=this.node.position.sub(PlayerPos).mag();\r\n        return dist;\r\n    },\r\n\r\n    onPicked:function(){\r\n        //当星星被收集时，调用Game脚本中的接口，生成一个新的星星\r\n        this.game.spawnNewStar();\r\n\r\n        //调用Game脚本的得分方法\r\n        this.game.gainScore();\r\n\r\n        //然后销毁当前星星节点\r\n        this.node.destroy();\r\n    },\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    update (dt) {\r\n        //每帧判断星星和主角之间的距离是否小于收集距离\r\n        if(this.getPlayerDistance()<this.pickRadius){\r\n            //调用收集行为\r\n            this.onPicked();\r\n            return;\r\n        }\r\n\r\n        //根据Game脚本中的计时器更新星星的透明度\r\n        var opacityRatio=1-this.game.timer/this.game.starDuration;\r\n        var minOpacity=50;\r\n        this.node.opacity=minOpacity+Math.floor(opacityRatio * (255 - minOpacity));\r\n    }\r\n});\r\n"]}